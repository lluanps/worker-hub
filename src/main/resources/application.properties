spring.datasource.url=jdbc:postgresql://localhost:5432/worker-hub?autoreconnect=true
spring.datasource.username=postgres
spring.datasource.password=admin
spring.datasource.dbcp2.driver-class-name=org.postgres.Driver
spring.jpa.hibernate.ddl-auto=update
spring.datasource.platform=postgres

spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
server.servlet.context-path=/e-commerce

#habilita e limita tamanho dos arquivos de upload
spring.servlet.multipart.max-file-size=10000KB
spring.servlet.multipart.max-request-size=10000KB
spring.servlet.multipart.enabled=true

#comprimi dados melhorando a perfomance
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024
server.http2.enabled=true

#usado para evitar problemas na codificacao, evitando erros em acento etc...
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.http.encoding.force-request=true
spring.http.encoding.force-response=true

#melhora perfomance
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#numero maximo de milissegundos que um cliente aguarda por uma conexao
spring.datasource.hikari.connection-timeout = 20000
#numero manimo de conexces inativas mantidas pelo HikariCP em um conjunto de conexoes
spring.datasource.hikari.minimum-idle= 200
#Maximo do pool de conexco
spring.datasource.hikari.maximum-pool-size= 550
#Tempo ociosos para conexao


#Tempo ociosos para conexao
spring.datasource.hikari.idle-timeout=10000
spring.datasource.hikari.pool-name=PoolHikari
spring.datasource.dbcp2.pool-prepared-statements=true
spring.datasource.dbcp2.max-open-prepared-statements=550


#salvando dados no banco automaticamente
spring.datasource.hikari.auto-commit=false 
#limita tempo da sessao do login
#server.servlet.session.timeout=240m
spring.transaction.rollback-on-commit-failure=true
#caso esteja executando muitos sql em lote, aumenta o 'gargalo' pra processar com maior facilidade	
spring.jpa.properties.hibernate.jdbc.batch_size=4
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
server.tomcat.max-connections = 50000
server.tomcat.min-spare-threads=1000
#limpa sessoes banco de dados que nao estao mais sendo usadas, ex abaixo: a cada 4 hrs faz esse processo
spring.session.jdbc.cleanup-cron = 0 0 4 * * *

#permite acesso acesso a imagens
spring.mvc.static-path-pattern=/resoures/static/**

#cria tabela flyway_schema_history
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true 

# para mais informacoes sobre Application Properties => https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html